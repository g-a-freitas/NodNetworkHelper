//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NodNetworkHelper {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class NodNetworkHelperResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal NodNetworkHelperResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NodNetworkHelper.NodNetworkHelperResources", typeof(NodNetworkHelperResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete Connection.
        /// </summary>
        internal static string btnDeleteConnection {
            get {
                return ResourceManager.GetString("btnDeleteConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Connection.
        /// </summary>
        internal static string btnNewConnection {
            get {
                return ResourceManager.GetString("btnNewConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reset Connection Alias.
        /// </summary>
        internal static string btnResetConnectionAlias {
            get {
                return ResourceManager.GetString("btnResetConnectionAlias", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap Hand_Add24 {
            get {
                object obj = ResourceManager.GetObject("Hand_Add24", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Hand_Alert24 {
            get {
                object obj = ResourceManager.GetObject("Hand_Alert24", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Hand_Del24 {
            get {
                object obj = ResourceManager.GetObject("Hand_Del24", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Hand_Error24 {
            get {
                object obj = ResourceManager.GetObject("Hand_Error24", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Hand_Refresh24 {
            get {
                object obj = ResourceManager.GetObject("Hand_Refresh24", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Hand_Save24 {
            get {
                object obj = ResourceManager.GetObject("Hand_Save24", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NodNetworkHelper.
        /// </summary>
        internal static string lblAppName {
            get {
                return ResourceManager.GetString("lblAppName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close Application.
        /// </summary>
        internal static string lblCloseApplication {
            get {
                return ResourceManager.GetString("lblCloseApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection Adapter:.
        /// </summary>
        internal static string lblConnectionAdapter {
            get {
                return ResourceManager.GetString("lblConnectionAdapter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alias:.
        /// </summary>
        internal static string lblConnectionAlias {
            get {
                return ResourceManager.GetString("lblConnectionAlias", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable Wifi Watcher.
        /// </summary>
        internal static string lblDisableWifiWatcher {
            get {
                return ResourceManager.GetString("lblDisableWifiWatcher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Wifi Watcher.
        /// </summary>
        internal static string lblEnableWifiWatcher {
            get {
                return ResourceManager.GetString("lblEnableWifiWatcher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Configuration.
        /// </summary>
        internal static string lblOpenConfiguration {
            get {
                return ResourceManager.GetString("lblOpenConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NodNetworkHelper Error.
        /// </summary>
        internal static string lblToolTipBalloonTitle_Error {
            get {
                return ResourceManager.GetString("lblToolTipBalloonTitle_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NodNetworkHelper Info.
        /// </summary>
        internal static string lblToolTipBalloonTitle_Info {
            get {
                return ResourceManager.GetString("lblToolTipBalloonTitle_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NodNetworkHelper Warning.
        /// </summary>
        internal static string lblToolTipBalloonTitle_Warning {
            get {
                return ResourceManager.GetString("lblToolTipBalloonTitle_Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There&apos;s already a Configuration marked as default for this Network Adapter (&apos;{0}&apos;). Do you wish to  make this the default?.
        /// </summary>
        internal static string msgAlreadyExistDefaultConfigForThisAdapterWishToReplace {
            get {
                return ResourceManager.GetString("msgAlreadyExistDefaultConfigForThisAdapterWishToReplace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There&apos;s another Configuration already associated with this Wifi Network..
        /// </summary>
        internal static string msgAlreadyExistsConfigurationAssociatedWithThisWifi {
            get {
                return ResourceManager.GetString("msgAlreadyExistsConfigurationAssociatedWithThisWifi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You need to enter a valid Alternative DNS Address for this Configuration!.
        /// </summary>
        internal static string msgAlternativeDNSAddressInvalid {
            get {
                return ResourceManager.GetString("msgAlternativeDNSAddressInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration successfully changed to: &apos;{0}&apos;.
        /// </summary>
        internal static string msgConfigurationChangedTo {
            get {
                return ResourceManager.GetString("msgConfigurationChangedTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is already a Configuration with this alias, please select a diferent one..
        /// </summary>
        internal static string msgConfigurationNameAlreadyExist {
            get {
                return ResourceManager.GetString("msgConfigurationNameAlreadyExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You need to enter a valid Alias for this Configuration!.
        /// </summary>
        internal static string msgConfigurationNameInvalid {
            get {
                return ResourceManager.GetString("msgConfigurationNameInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you really want to delete this Network Configuration? All data will be lost..
        /// </summary>
        internal static string msgDeleteConfiguration {
            get {
                return ResourceManager.GetString("msgDeleteConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There has been an erro whe trying to set the Configuration: &apos;{0}&apos;.
        /// </summary>
        internal static string msgFailureConfigurationChangedTo {
            get {
                return ResourceManager.GetString("msgFailureConfigurationChangedTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You need to enter a valid Gateway Address for this Configuration!.
        /// </summary>
        internal static string msgGatewayInvalid {
            get {
                return ResourceManager.GetString("msgGatewayInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You need to enter a valid IP Address for this Configuration!.
        /// </summary>
        internal static string msgIpAddressInvalid {
            get {
                return ResourceManager.GetString("msgIpAddressInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You need to enter a valid Network Adapter for this Configuration!.
        /// </summary>
        internal static string msgNetworkAdapterInvalid {
            get {
                return ResourceManager.GetString("msgNetworkAdapterInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You need to enter a valid Preferential DNS Address for this Configuration!.
        /// </summary>
        internal static string msgPreferentialDNSAddressInvalid {
            get {
                return ResourceManager.GetString("msgPreferentialDNSAddressInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You need to enter a valid ProxyAddress for this Configuration!.
        /// </summary>
        internal static string msgProxyAddressInvalid {
            get {
                return ResourceManager.GetString("msgProxyAddressInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You need to enter a valid SubNetwork Mask for this Configuration!.
        /// </summary>
        internal static string msgSubNetworkMaskInvalid {
            get {
                return ResourceManager.GetString("msgSubNetworkMaskInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Configuration was found for the current Wifi Network. The last Configuration remains..
        /// </summary>
        internal static string msgWifiChangedNoConfigurationFound {
            get {
                return ResourceManager.GetString("msgWifiChangedNoConfigurationFound", resourceCulture);
            }
        }
        
        internal static System.Drawing.Icon Network16 {
            get {
                object obj = ResourceManager.GetObject("Network16", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
    }
}
